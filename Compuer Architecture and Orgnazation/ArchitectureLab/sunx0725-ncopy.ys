#/* $begin ncopy-ys */
##################################################################
# ncopy.ys - Copy a src block of len words to dst.
# Return the number of positive words (>0) contained in src.
#
# ZHongyi Sun sunx0725 5320262
#
# Describe how and why you modified the baseline code.
#When I saw the original code, it copy one element every time. Thus, #I think
#it's not very effiencient when we pass a big array. So, I changed #the code and 
#made it copy four elements every time. Describption as follows:
#first, initialize the return value as zero. Atfer that, I subtracted #4 from the len
#if len < 4, then jump to the remaning part. If len > 4, enter a #loop, jump out of 
#the loop until len<4.
#In the loop, I copy (%rdi) 8(%rdi) 16(%rdi) 24(%rdi) to their #destination as the #same #time. after finishing copy element. (%rdi
#+ 32) and (%rsi + 32) to prepare #for the next operation.
# 
##################################################################
# Do not modify this portion
# Function prologue.
# %rdi = src, %rsi = dst, %rdx = len
ncopy:

##################################################################
# You can modify this portion

 # Loop header
  xorq %rax,%rax    # count = 0;
  iaddq $-4, %rdx
  andq %rdx,%rdx    # len < 4?
  jl Next    # if so, goto Next:
 
Loop:  
	mrmovq (%rdi), %r8
	mrmovq 8(%rdi), %r9
	rmmovq %r8, (%rsi)
	andq	%r8, %r8
	jle	Lpos1
	iaddq	$1, %rax
Lpos1:
	rmmovq	%r9, 8(%rsi)
	andq	%r9, %r9
	jle	Lpos2
	iaddq	$1, %rax
Lpos2:
	mrmovq	16(%rdi), %r8
	mrmovq	24(%rdi), %r9
	rmmovq	%r8, 16(%rsi)
	andq	%r8, %r8
	jle	Lpos3
	iaddq	$1, %rax
Lpos3:	
	rmmovq	%r9, 24(%rsi)
	andq	%r9, %r9
	jle	nextLoop
	iaddq	$1, %rax

nextLoop:
	iaddq	$32, %rdi
	iaddq	$32, %rsi
	iaddq	$-4, %rdx
	jge	Loop	
Next:

	iaddq $4, %rdx
	iaddq $-1, %rdx
	jl	Done
	mrmovq	(%rdi), %r8
	mrmovq	8(%rdi), %r9
	rmmovq	%r8, (%rsi)
	andq	%r8, %r8
	jle	Npos
	iaddq	$1, %rax
Npos:
	iaddq $-1, %rdx
	jl	Done
	rmmovq	%r9, 8(%rsi)
	andq	%r9, %r9
	jle	Npos1
	iaddq	$1, %rax
Npos1:
	iaddq $-1, %rdx
	jl	Done
	mrmovq	16(%rdi), %r8
	rmmovq	%r8, 16(%rsi)
	andq	%r8, %r8
	jle	Done
	iaddq	$1, %rax



  
##################################################################
# Do not modify the following section of code
# Function epilogue.
Done:
  ret
##################################################################
# Keep the following label at the end of your function
End:
#/* $end ncopy-ys */

